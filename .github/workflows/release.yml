name: Release

on:
  push:
    tags:
      - 'v*'

jobs:

  tests:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install Panther
        run: python -m pip install .

      - name: Install Faker
        run: python -m pip install faker

      - name: Run Tests
        run: python -m unittest tests/test_*.py

  coverage:
    name: Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Panther
        run: python -m pip install .

      - name: Install Faker
        run: python -m pip install faker

      - name: Install Coverage
        run: python -m pip install coverage

      - name: Run Coverage Tests
        run: coverage run -m unittest tests/test_*.py

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-mongodb:
    name: Test MongoDB
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
        mongodb-version: ['4.2', '4.4', '5.0', '6.0']

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install Panther
        run: python -m pip install .

      - name: Install Faker
        run: python -m pip install faker

      - name: Install PyOpenSSL
        run: python -m pip install pyOpenSSL

      - name: Install PyMongo
        run: python -m pip install pymongo

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

#      - name: Run Tests
#        run: python -m unittest tests/test_mongodb.py

  build-n-publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    needs: [test-run, test-pantherdb, test-mongodb]

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Build source and wheel distributions
        run: |
          python -m pip install --upgrade build twine
          python -m build
          twine check --strict dist/*

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

